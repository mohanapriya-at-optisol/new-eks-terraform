name: Terraform Deploy Non Interactive

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: [self-hosted, linux, x64]

    env:
      # AWS credentials
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      # Terraform / bootstrap variables from GitHub secrets
      GITHUB_ENVIRONMENT: ${{ secrets.TF_ENVIRONMENT }}
      GITHUB_REGION: ${{ secrets.AWS_REGION }}
      GITHUB_AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
      GITHUB_TF_BUCKET: ${{ secrets.TF_S3_BUCKET }}
      GITHUB_TF_DDB_TABLE: ${{ secrets.TF_DDB_TABLE }}
      GITHUB_CLUSTER_NAME: ${{ secrets.TF_CLUSTER_NAME }}
      GITHUB_CLUSTER_VERSION: ${{ secrets.CLUSTER_VERSION }}
      GITHUB_VPC_CIDR: ${{ secrets.TF_VPC_CIDR }}
      GITHUB_NODE_GROUP_NAME: ${{ secrets.TF_NODE_GROUP_NAME }}
      GITHUB_INSTANCE_TYPE: ${{ secrets.TF_NODE_INSTANCE_TYPE }}
      GITHUB_MIN_SIZE: ${{ secrets.TF_MIN_SIZE }}
      GITHUB_MAX_SIZE: ${{ secrets.TF_MAX_SIZE }}
      GITHUB_DESIRED_SIZE: ${{ secrets.TF_DESIRED_SIZE }}
      GITHUB_DISK_SIZE: ${{ secrets.TF_DISK_SIZE }}
      GITHUB_PROJECT_NAME: ${{ secrets.TF_PROJECT_NAME }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Navigate to Terraform Directory
        run: |
          cd terraform-eks
          pwd
          ls -la
        working-directory: ${{ github.workspace }}

      - name: Ensure tf-admin AWS profile
        run: |
          if aws configure list-profiles | grep -q '^tf-admin$'; then
            echo "✅ tf-admin profile already exists."
          else
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile tf-admin
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile tf-admin
            aws configure set region $AWS_DEFAULT_REGION --profile tf-admin
            echo "✅ tf-admin profile created successfully."
          fi

      - name: Run Bootstrap Script
        run: |
          chmod +x setup-backend.sh
          ./setup-backend.sh
        working-directory: terraform-eks
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          GITHUB_ENVIRONMENT: ${{ secrets.TF_ENVIRONMENT }}
          GITHUB_REGION: ${{ secrets.AWS_REGION }}
          GITHUB_AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
          GITHUB_TF_BUCKET: ${{ secrets.TF_S3_BUCKET }}
          GITHUB_TF_DDB_TABLE: ${{ secrets.TF_DDB_TABLE }}
          GITHUB_CLUSTER_NAME: ${{ secrets.TF_CLUSTER_NAME }}
          GITHUB_CLUSTER_VERSION: ${{ secrets.CLUSTER_VERSION }}
          GITHUB_VPC_CIDR: ${{ secrets.TF_VPC_CIDR }}
          GITHUB_NODE_GROUP_NAME: ${{ secrets.TF_NODE_GROUP_NAME }}
          GITHUB_INSTANCE_TYPE: ${{ secrets.TF_NODE_INSTANCE_TYPE }}
          GITHUB_MIN_SIZE: ${{ secrets.TF_MIN_SIZE }}
          GITHUB_MAX_SIZE: ${{ secrets.TF_MAX_SIZE }}
          GITHUB_DESIRED_SIZE: ${{ secrets.TF_DESIRED_SIZE }}
          GITHUB_DISK_SIZE: ${{ secrets.TF_DISK_SIZE }}
          GITHUB_PROJECT_NAME: ${{ secrets.TF_PROJECT_NAME }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform-eks

      - name: Terraform Plan
        run: |
          terraform plan \
            -var-file="static.tfvars" \
            -var-file="envs/${{ secrets.TF_ENVIRONMENT }}.tfvars" \
            -out=tfplan.out
        working-directory: terraform-eks

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan.out
        working-directory: terraform-eks

      - name: Output EKS Cluster Info
        run: terraform output
        working-directory: terraform-eks
