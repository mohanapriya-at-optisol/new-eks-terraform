name: Terraform Deploy Non-Interactive

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: [self-hosted, linux, x64]

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      GITHUB_ENVIRONMENT: ${{ secrets.TF_ENVIRONMENT }}
      GITHUB_REGION: ${{ secrets.AWS_REGION }}
      GITHUB_AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
      GITHUB_TF_BUCKET: ${{ secrets.TF_S3_BUCKET }}
      GITHUB_TF_DDB_TABLE: ${{ secrets.TF_DDB_TABLE }}
      GITHUB_CLUSTER_NAME: ${{ secrets.TF_CLUSTER_NAME }}
      GITHUB_CLUSTER_VERSION: ${{ secrets.CLUSTER_VERSION }}
      GITHUB_VPC_CIDR: ${{ secrets.TF_VPC_CIDR }}
      GITHUB_NODE_GROUP_NAME: ${{ secrets.TF_NODE_GROUP_NAME }}
      GITHUB_INSTANCE_TYPE: ${{ secrets.TF_NODE_INSTANCE_TYPE }}
      GITHUB_MIN_SIZE: ${{ secrets.TF_MIN_SIZE }}
      GITHUB_MAX_SIZE: ${{ secrets.TF_MAX_SIZE }}
      GITHUB_DESIRED_SIZE: ${{ secrets.TF_DESIRED_SIZE }}
      GITHUB_DISK_SIZE: ${{ secrets.TF_DISK_SIZE }}
      GITHUB_PROJECT_NAME: ${{ secrets.TF_PROJECT_NAME }}

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ensures full history for workspace operations

      # 2Ô∏è‚É£ Show workspace info
      - name: Show runner workspace
        run: |
          echo "Runner workspace: $GITHUB_WORKSPACE"
          pwd
          ls -la

      # 3Ô∏è‚É£ Ensure AWS profile exists
      - name: Ensure tf-admin AWS profile
        run: |
          if aws configure list-profiles | grep -q '^tf-admin$'; then
            echo "‚úÖ tf-admin profile already exists."
          else
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile tf-admin
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile tf-admin
            aws configure set region $AWS_DEFAULT_REGION --profile tf-admin
            echo "‚úÖ tf-admin profile created successfully."
          fi

      # 4Ô∏è‚É£ Debug environment variables (masked)
      - name: Debug environment variables
        run: |
          echo "üí° Environment: $GITHUB_ENVIRONMENT"
          echo "üí° Region: $GITHUB_REGION"
          echo "üí° AWS Profile: $GITHUB_AWS_PROFILE"

      # 5Ô∏è‚É£ Run bootstrap script
      - name: Run Bootstrap Script
        run: |
          chmod +x setup-backend.sh
          ./setup-backend.sh
        working-directory: terraform-eks

      # 6Ô∏è‚É£ Cache Terraform plugins and modules
      - name: Cache Terraform
        uses: actions/cache@v3
        with:
          path: |
            terraform-eks/.terraform
            ~/.terraform.d/plugin-cache
          key: terraform-${{ runner.os }}-${{ env.GITHUB_ENVIRONMENT }}-${{ hashFiles('terraform-eks/**/*.tf*') }}
          restore-keys: |
            terraform-${{ runner.os }}-${{ env.GITHUB_ENVIRONMENT }}-

      # 7Ô∏è‚É£ Conditional Terraform Init (only if not already initialized)
      - name: Terraform Init (if required)
        run: |
          cd terraform-eks
          if [ ! -d ".terraform" ] || [ ! -f ".terraform/terraform.tfstate" ]; then
            echo "üöÄ Terraform not initialized. Running init..."
            terraform init -backend-config="backend-config/${{ secrets.TF_ENVIRONMENT }}.tfbackend"
          else
            echo "‚úÖ Terraform already initialized. Skipping init."
          fi
        working-directory: terraform-eks

      # 8Ô∏è‚É£ Terraform Validate
      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform-eks

      # 9Ô∏è‚É£ Terraform Plan
      - name: Terraform Plan
        run: |
          terraform plan \
            -var-file="static.tfvars" \
            -var-file="envs/${{ secrets.TF_ENVIRONMENT }}.tfvars" \
            -out=tfplan.out
        working-directory: terraform-eks

      # üîü Terraform Apply
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan.out
        working-directory: terraform-eks

      # 1Ô∏è‚É£1Ô∏è‚É£ Output EKS Cluster Info
      - name: Output EKS Cluster Info
        run: terraform output
        working-directory: terraform-eks
