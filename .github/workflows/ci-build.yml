name: Terraform Deploy Non Interactive

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: [self-hosted, linux, x64]

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      GITHUB_ENVIRONMENT: ${{ secrets.TF_ENVIRONMENT }}
      GITHUB_REGION: ${{ secrets.AWS_REGION }}
      GITHUB_AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
      GITHUB_TF_BUCKET: ${{ secrets.TF_S3_BUCKET }}
      GITHUB_TF_DDB_TABLE: ${{ secrets.TF_DDB_TABLE }}
      GITHUB_CLUSTER_NAME: ${{ secrets.TF_CLUSTER_NAME }}
      GITHUB_CLUSTER_VERSION: ${{ secrets.CLUSTER_VERSION }}
      GITHUB_VPC_CIDR: ${{ secrets.TF_VPC_CIDR }}
      GITHUB_NODE_GROUP_NAME: ${{ secrets.TF_NODE_GROUP_NAME }}
      GITHUB_INSTANCE_TYPE: ${{ secrets.TF_NODE_INSTANCE_TYPE }}
      GITHUB_MIN_SIZE: ${{ secrets.TF_MIN_SIZE }}
      GITHUB_MAX_SIZE: ${{ secrets.TF_MAX_SIZE }}
      GITHUB_DESIRED_SIZE: ${{ secrets.TF_DESIRED_SIZE }}
      GITHUB_DISK_SIZE: ${{ secrets.TF_DISK_SIZE }}
      GITHUB_PROJECT_NAME: ${{ secrets.TF_PROJECT_NAME }}

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Ensure tf-admin AWS profile exists
      - name: Ensure tf-admin AWS profile
        run: |
          if aws configure list-profiles | grep -q '^tf-admin$'; then
            echo "‚úÖ tf-admin profile exists"
          else
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile tf-admin
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile tf-admin
            aws configure set region $AWS_DEFAULT_REGION --profile tf-admin
            echo "‚úÖ tf-admin profile created"
          fi

      # 3Ô∏è‚É£ Update only last committed Terraform files
      - name: Update last committed files
        id: update_files
        run: |
          TARGET_DIR="$GITHUB_WORKSPACE/terraform-eks"
          mkdir -p "$TARGET_DIR"

          LAST_COMMIT=$(git rev-parse HEAD)
          CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r $LAST_COMMIT)

          echo "Changed files in last commit:"
          echo "$CHANGED_FILES"

          echo "$CHANGED_FILES" | while read file; do
            if [ -n "$file" ] && [[ "$file" == *.tf* ]]; then
              echo "Updating: $file"
              mkdir -p "$(dirname "$TARGET_DIR/$file")"
              git show HEAD:"$file" > "$TARGET_DIR/$file"
            fi
          done

      # 4Ô∏è‚É£ Cache Terraform modules and providers
      - name: Cache Terraform
        uses: actions/cache@v3
        with:
          path: |
            terraform-eks/.terraform
            terraform-eks/.terraform.lock.hcl
          key: terraform-${{ runner.os }}-${{ env.GITHUB_ENVIRONMENT }}-${{ hashFiles('terraform-eks/**/*.tf*') }}
          restore-keys: terraform-${{ runner.os }}-${{ env.GITHUB_ENVIRONMENT }}-

      # 5Ô∏è‚É£ Run bootstrap script (setup backend, env files)
      - name: Run bootstrap script
        run: |
          chmod +x setup-backend.sh
          ./setup-backend.sh
        working-directory: terraform-eks

      # 6Ô∏è‚É£ Terraform Init (only if not initialized)
      - name: Terraform Init
        run: |
          if [ ! -d "terraform-eks/.terraform" ]; then
            echo "üöÄ Initializing Terraform..."
            terraform -chdir=terraform-eks init -backend-config="backend-config/${{ env.GITHUB_ENVIRONMENT }}.tfbackend"
          else
            echo "‚úÖ Terraform already initialized"
          fi

      # 7Ô∏è‚É£ Ensure correct workspace
      - name: Terraform Workspace
        run: |
          CURRENT=$(terraform -chdir=terraform-eks workspace show)
          if [ "$CURRENT" != "${{ env.GITHUB_ENVIRONMENT }}" ]; then
            terraform -chdir=terraform-eks workspace select ${{ env.GITHUB_ENVIRONMENT }} || \
            terraform -chdir=terraform-eks workspace new ${{ env.GITHUB_ENVIRONMENT }}
          fi

      # 8Ô∏è‚É£ Terraform Validate
      - name: Terraform Validate
        run: terraform -chdir=terraform-eks validate

      # 9Ô∏è‚É£ Terraform Plan
      - name: Terraform Plan
        run: |
          terraform -chdir=terraform-eks plan \
            -var-file="static.tfvars" \
            -var-file="envs/${{ env.GITHUB_ENVIRONMENT }}.tfvars" \
            -out=tfplan.out

      # üîü Terraform Apply
      - name: Terraform Apply
        run: terraform -chdir=terraform-eks apply -auto-approve tfplan.out

      # 1Ô∏è‚É£1Ô∏è‚É£ Output Terraform
      - name: Terraform Output
        run: terraform -chdir=terraform-eks output
